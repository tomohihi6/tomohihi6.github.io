{"version":3,"sources":["components/AddTaskBar.jsx","components/Task.jsx","containers/App.jsx","reportWebVitals.js","index.jsx"],"names":["i","AddTaskBar","handleAddTask","taskTextsRef","useRef","style","display","justifyContent","width","TextField","id","label","variant","color","fullWidth","inputRef","Button","onClick","texts","current","value","length","alert","Task","task","handleDeleteTask","useState","checked","setChecked","alignItems","Checkbox","onChange","event","target","marginLeft","textDecorationLine","cursor","APP_KEY","TabPanel","tab_index","index","children","role","hidden","margin","Box","p","Typography","App","setTabIndex","fetchedTasks","localStorage","getItem","JSON","parse","tasks","setTasks","active_tasks","filter","v","completed_tasks","useEffect","setItem","stringify","useCallback","tmp_tasks","console","log","idx","indexOf","splice","handleDleteAllCompletedTasks","handleTabChange","_","newValue","className","fontSize","fontFamily","fontWeight","Tabs","textColor","indicatorColor","Tab","map","flexDirection","paddingRight","startIcon","lineHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbe81702.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nlet i = 0;\n\nexport const AddTaskBar = ({ handleAddTask }) => {\n  const taskTextsRef = useRef(null);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <div style={{ width: '80%' }}>\n        <TextField\n          id=\"outlined-primary\"\n          label=\"add details\"\n          variant=\"outlined\"\n          color=\"primary\"\n          fullWidth={true}\n          inputRef={taskTextsRef}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          const texts = taskTextsRef.current.value;\n          // eslint-disable-next-line no-undef\n          texts.length !== 0 ? handleAddTask(false, texts, i++) : alert('タスクを入力してください');\n          taskTextsRef.current.value = '';\n        }}\n      >\n        Add\n      </Button>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nexport const Task = ({ task, handleDeleteTask }) => {\n  const [checked, setChecked] = useState(task.checked);\n\n  const handleCheckChange = (event) => {\n    task.checked = event.target.checked;\n    setChecked(event.target.checked);\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Checkbox checked={checked} color=\"primary\" onChange={handleCheckChange} />\n        <div style={checked ? { marginLeft: '6px', textDecorationLine: 'line-through' } : { marginLeft: '6px' }}>\n          {task.texts}\n        </div>\n      </div>\n      <div style={{ cursor: 'pointer', display: 'flex', alignItems: 'center' }} onClick={() => handleDeleteTask(task)}>\n        <DeleteOutlineIcon color=\"disabled\" />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport '../utils/App.css';\nimport { AddTaskBar } from '../components/AddTaskBar';\nimport { Task } from '../components/Task';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nconst APP_KEY = 'todo';\n\nconst App = () => {\n  const [tab_index, setTabIndex] = useState(0);\n  const fetchedTasks = localStorage.getItem(APP_KEY);\n  const [tasks, setTasks] = fetchedTasks ? useState(JSON.parse(fetchedTasks)) : useState([]);\n  const active_tasks = tasks.filter((v) => !v.checked);\n  const completed_tasks = tasks.filter((v) => v.checked);\n\n  useEffect(() => {\n    localStorage.setItem(APP_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n\n  const handleAddTask = useCallback(\n    (checked, texts, id) => {\n      setTasks([...tasks, { checked: checked, texts: texts, id: id }]);\n    },\n    [tasks]\n  );\n\n  const handleDeleteTask = useCallback(\n    (v) => {\n      const tmp_tasks = [...tasks];\n      console.log(tmp_tasks);\n      const idx = tmp_tasks.indexOf(v);\n      console.log(idx);\n      if (idx >= 0) {\n        tmp_tasks.splice(idx, 1);\n      }\n      setTasks(tmp_tasks);\n    },\n    [tasks]\n  );\n\n  const handleDleteAllCompletedTasks = useCallback(() => {\n    setTasks([...active_tasks]);\n  }, [active_tasks]);\n\n  const handleTabChange = useCallback(\n    (_, newValue) => {\n      setTabIndex(newValue);\n    },\n    [tab_index]\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={{ fontSize: 36, fontFamily: 'Raleway', fontWeight: 'bold' }}>#todo</div>\n      </header>\n      <div style={{ width: 480, margin: '0 auto' }}>\n        <Tabs value={tab_index} textColor=\"primary\" indicatorColor=\"primary\" onChange={handleTabChange}>\n          <Tab label=\"All\"></Tab>\n          <Tab label=\"Active\"></Tab>\n          <Tab label=\"Completed\"></Tab>\n        </Tabs>\n      </div>\n      <div style={{ margin: '18px auto', width: 480 }}>\n        <AddTaskBar handleAddTask={handleAddTask} />\n      </div>\n\n      <TabPanel tab_index={tab_index} index={0}>\n        {tasks.length !== 0 ? tasks.map((v) => <Task task={v} key={v.id} handleDeleteTask={handleDeleteTask} />) : null}\n      </TabPanel>\n      <TabPanel tab_index={tab_index} index={1}>\n        {active_tasks.length !== 0\n          ? active_tasks.map((v) => <Task task={v} key={v.id} handleDeleteTask={handleDeleteTask} />)\n          : null}\n      </TabPanel>\n      <TabPanel tab_index={tab_index} index={2}>\n        {completed_tasks.length !== 0\n          ? completed_tasks.map((v) => <Task task={v} key={v.id} handleDeleteTask={handleDeleteTask} />)\n          : null}\n      </TabPanel>\n      {tab_index === 2 ? (\n        <div\n          style={{ display: 'flex', flexDirection: 'row-reverse', paddingRight: 32 }}\n          onClick={handleDleteAllCompletedTasks}\n        >\n          <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteOutlineIcon />}>\n            <div style={{ fontFamily: 'Montserrat', fontWeight: 600, fontSize: 12, lineHeight: '15px' }}>\n              delete all\n            </div>\n          </Button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst TabPanel = ({ tab_index, index, children }) => {\n  return (\n    <div role=\"tabpanel\" hidden={tab_index !== index} style={{ width: 480, margin: '0 auto' }}>\n      {tab_index === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}